==============================
MongoDB Replica Set Setup – Master/Secondary
==============================

# On Master (Primary VM)

# Basic tools
apt install vim curl wget ssh -y 
apt-get update -y
apt-get upgrade -y

# Check Ubuntu version
cat /etc/lsb-release

# Install gnupg and curl
apt-get install gnupg curl

# Add MongoDB GPG key
curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg --dearmor

# Add MongoDB repository
echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list

# Update package list and install MongoDB
apt-get update
apt-get install -y mongodb-org

# Start and enable MongoDB service
systemctl start mongod
systemctl enable mongod
systemctl status mongod

# Install MongoDB Compass GUI
wget https://downloads.mongodb.com/compass/mongodb-compass_1.46.8_amd64.deb
dpkg -i mongodb-compass_1.46.8_amd64.deb 

# Check MongoDB service
systemctl status mongod.service 

# Edit MongoDB config
vi /etc/mongod.conf

# Restart MongoDB after editing config
systemctl restart mongod

# Open firewall port for MongoDB
sudo ufw allow 27017/tcp

# MongoDB Master Node Config (/etc/mongod.conf)
# ----------------------------
# storage
storage:
  dbPath: /var/lib/mongodb

# system log
systemLog:
  destination: file
  logAppend: true
  path: /var/log/mongodb/mongod.log

# network interfaces
net:
  port: 27017
  bindIp: 0.0.0.0

# process management
processManagement:
  timeZoneInfo: /usr/share/zoneinfo

# replication
replication:
  replSetName: "rs0"

# security
security:
  authorization: disabled

# Restart MongoDB and open firewall
systemctl enable mongod
systemctl restart mongod
ufw allow 27017/tcp

# Start Mongo shell
mongosh

# Inside mongosh terminal – Initiate Replica Set
rs.initiate({
  _id: "rs0",
  members: [
    { _id: 0, host: "192.168.163.128:27017" },
    { _id: 1, host: "192.168.163.130:27017" }
  ]
})

# Check Replica Set status
rs.status()

# Test Replication – Insert data in Primary
use testDB
db.testCollection.insert({name:"Rameshwar"})

# Connect to Secondary VM and verify data
mongosh --host 192.168.163.130
use testDB
db.testCollection.find()

# Tip for first-time partial initiation
# If partial replica set exists, reset first
rs.remove("192.168.163.130:27017")
# Then re-add
rs.add("192.168.163.130:27017")
